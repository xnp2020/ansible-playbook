worker_processes auto;

#全局错误日志及PID文件的位置
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

#工作模式及连接数上限
events {
    #单个后台work进程最大并发数设置为1024
    worker_connections  1024;
}

http {
    #设定mime类型
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    #设定日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;  # 数据包会累计到一定大小之后才会发送，减小了额外开销，提高网络效率
    keepalive_timeout  60;
    tcp_nodelay on;  #禁用 Nagle 算法，尽快发送数据,只会针对处于 keep-alive 状态的 TCP 连接才会启用

    client_max_body_size 10m; #设置最大请求体大小
    client_body_buffer_size 10m;  #防止buffer太小导致写临时文件
    
    add_header X-Frame-Options SAMEORIGIN;  #防止点击劫持攻击

    gzip  on; #开启GZIP压缩
    gzip_min_length 1k;  # 设置压缩最小单位，小于不压缩
    gzip_static on;  # 静态压缩，直接读取已经压缩好的文件，对于不支持gzip的请求则读取原文件
    gzip_vary on;  # 增加响应头字段"Vary: Accept-Encoding"
    gzip_proxied any; # nginx做为反向代理时启用，any表示压缩所有结果
    gzip_comp_level 4; # 压缩比，可设置1-9，越大压缩率越高
    gzip_buffers 4 16k; # 设置用于压缩的内存页的数量和大小。
    gzip_types * ; # 压缩内容，* 匹配所有MIME类型

    server_tokens off;  #不显示版本

    include /etc/nginx/conf.d/*.conf;
}